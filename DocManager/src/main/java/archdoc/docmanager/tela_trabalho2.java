/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package archdoc.docmanager;

import java.awt.Point;
import java.io.File;
import java.sql.Connection;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTree;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeModel;

/**
 *
 * @author super
 */
public class tela_trabalho2 extends javax.swing.JInternalFrame {

    /**
     * Creates new form tela_trabalho2
     */
    
    Point local;
    String workPath = System.getProperty("user.dir") + "/workPath";
    
    Connection conexao;
    connect connect = new connect();

    public Point getLocal() {
        return local;
    }

    public void setLocal(Point local) {
        this.local = local;
    }
    
    public tela_trabalho2() {
        initComponents();
        setFrameIcon(new ImageIcon(System.getProperty("user.dir") + "/imgs/icons/trab2.png"));
        try{ conexao = connect.connectionMySql();
        }catch(Exception e) { ; }
        
        atualiza();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTree2 = new javax.swing.JTree();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();

        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                focoGanho(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentMoved(java.awt.event.ComponentEvent evt) {
                mudouLocal(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton1.setText("Atualizar");
        jButton1.setMinimumSize(new java.awt.Dimension(0, 0));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTabbedPane1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(0, 0));

        jPanel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        jTree2.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jTree2.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        jScrollPane2.setViewportView(jTree2);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 674, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("WorkPath", jPanel2);

        treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        jTree1.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jTree1.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        jScrollPane1.setViewportView(jTree1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 674, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Banco de Dados", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(5, 5, 5))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(5, 5, 5)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        setBounds(683, 0, 696, 515);
    }// </editor-fold>//GEN-END:initComponents

    private void mudouLocal(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_mudouLocal
        // TODO add your handling code here:
        try{
            this.setLocation(this.local);
        }catch(Exception e){ ; }
    }//GEN-LAST:event_mudouLocal

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        atualiza();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void atualiza(){
        DefaultTreeModel model1 = (DefaultTreeModel) jTree1.getModel();
        DefaultMutableTreeNode root1 = (DefaultMutableTreeNode) model1.getRoot();
        root1.removeAllChildren();
        model1.reload();
        DefaultTreeModel model2 = (DefaultTreeModel) jTree2.getModel();
        DefaultMutableTreeNode root2 = (DefaultMutableTreeNode) model2.getRoot();
        root2.removeAllChildren();
        model2.reload();
        
        try {
            scanner(new File(workPath), jTree2);
        } catch (InterruptedException ex) {
            Logger.getLogger(tela_trabalho2.class.getName()).log(Level.SEVERE, null, ex);
        }

        try{
            jTree1.removeAll();
            DefaultMutableTreeNode newdir = new DefaultMutableTreeNode();

            for(String i : connect.getAllArquivos(conexao)){
                // gets the current model of the jtree
                DefaultTreeModel model = (DefaultTreeModel) jTree1.getModel();

                // gets the root
                DefaultMutableTreeNode root = (DefaultMutableTreeNode) model.getRoot();

                // generates a node newdir using filename
                newdir = new DefaultMutableTreeNode(i);

                // adds a node to the root of the jtree
                root.add(newdir);

                model.reload();
            }
        }catch(Exception e){ ; }
    }
    private void focoGanho(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_focoGanho
        // TODO add your handling code here:
        this.moveToBack();
    }//GEN-LAST:event_focoGanho

    public void scanner(File location, JTree lista) throws InterruptedException {
        // creates a file with the location filename

        // result is the variable name for jtree
        DefaultTreeModel model = (DefaultTreeModel) lista.getModel();
        // gets the root of the current model used only once at the starting
        DefaultMutableTreeNode root = (DefaultMutableTreeNode) model.getRoot();
        // function caled
        displayDirectoryContents(location, root);
    }
    public void displayDirectoryContents(File dir, DefaultMutableTreeNode root2) throws InterruptedException {

    DefaultMutableTreeNode newdir = new DefaultMutableTreeNode();

    File[] files = dir.listFiles();
try{
    for (File file : files) {
        if (file == null) {
            JOptionPane.showMessageDialog(null, "Diret√≥rio nulo!");
            continue;
        }
        if (file.isDirectory()) {
            // file is a directory that is a folder has been dound

            if (file.listFiles() == null) {
                // skips null files
                continue;
            }

            // gets the current model of the jtree
            DefaultTreeModel model = (DefaultTreeModel) jTree2.getModel();

            // gets the root
            DefaultMutableTreeNode root = (DefaultMutableTreeNode) model.getRoot();

            // generates a node newdir using filename
            newdir = new DefaultMutableTreeNode(file.getName());

            // adds a node to the root of the jtree
            root2.add(newdir);

            // refresh the model to show the changes
            model.reload();

            // recursively calls the function again to explore the contents
            // folder
            displayDirectoryContents(file, newdir);
        } else {
            // Else part File is not a directory

            // gets the current model of the tree
            DefaultTreeModel model = (DefaultTreeModel) jTree2.getModel();

            // selected node is the position where the new node will be
            // inserted
            DefaultMutableTreeNode selectednode = root2;

            DefaultMutableTreeNode newfile = new DefaultMutableTreeNode(file.getName());

            // inserts a node newfile under selected node which is the root
            model.insertNodeInto(newfile, selectednode, selectednode.getChildCount());

            // refresh the model to show the changes
            model.reload();

        }
    }
    
    }catch(Exception e){;}
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTree jTree1;
    private javax.swing.JTree jTree2;
    // End of variables declaration//GEN-END:variables
}
